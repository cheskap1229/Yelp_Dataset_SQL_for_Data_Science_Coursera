/* Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10,000
ii. Business table = 10,000
iii. Category table = 10,000
iv. Checkin table = 10,000
v. elite_years table = 10,000
vi. friend table = 10,000
vii. hours table = 10,000
viii. photo table = 10,000
ix. review table = 10,000
x. tip table = 10,000
xi. user table = 10,000 */



/* 2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10,000 (id)
ii. Hours = 1562 (business_id)
iii. Category = 2643 (business_id)
iv. Attribute = 1115 (business_id)
v. Review = 10,000 (id); 8090 (business_id); 9581 (user_id)
vi. Checkin = 493 (business_id)
vii. Photo = 10,000 (id); 6493 (business_id)
viii. Tip = 537 (user_id); 3979 (business_id)
ix. User = 10,000 (id)
x. Friend = 11 (user_id)
xi. Elite_years = 2780 (user_id)

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	*/



/* 3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	
	SQL code used to arrive at answer: */

select *

from user

where
	id is null or
	name is null or
	review_count is null or
	yelping_since is null or
	useful is null or
	funny is null or
	cool is null or
	fans is null or
	average_stars is null or
	compliment_hot is null or
	compliment_more is null or
	compliment_profile is null or
	compliment_cute is null or
	compliment_list is null or
	compliment_note is null or
	compliment_plain is null or
	compliment_cool is null or
	compliment_funny is null or
	compliment_writer is null or
	compliment_photos is null


	
/* 4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:	1	max:	5	avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:	1.0	max:	5.0	avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:	0	max:	2	avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:	1	max:	53	avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:	0	max:	2000	avg: 24.2995 */
		


/* 5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer: */

select
    city,
    sum (review_count) as review_count

from business

group by city

order by review_count desc

	
	Copy and Paste the Result Below:
+-----------------+--------------+
| city            | review_count |
+-----------------+--------------+
| Las Vegas       |        82854 |
| Phoenix         |        34503 |
| Toronto         |        24113 |
| Scottsdale      |        20614 |
| Charlotte       |        12523 |
| Henderson       |        10871 |
| Tempe           |        10504 |
| Pittsburgh      |         9798 |
| Montr√©al        |         9448 |
| Chandler        |         8112 |
| Mesa            |         6875 |
| Gilbert         |         6380 |
| Cleveland       |         5593 |
| Madison         |         5265 |
| Glendale        |         4406 |
| Mississauga     |         3814 |
| Edinburgh       |         2792 |
| Peoria          |         2624 |
| North Las Vegas |         2438 |
| Markham         |         2352 |
| Champaign       |         2029 |
| Stuttgart       |         1849 |
| Surprise        |         1520 |
| Lakewood        |         1465 |
| Goodyear        |         1155 |
+-----------------+--------------+
	

	
/* 6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer: */

select
	stars,
	count (*) as 'count'

from business

where city = 'Avon'

group by stars


	Copy and Paste the Result Below:
+-------+-------+
| stars | count |
+-------+-------+
|   1.5 |     1 |
|   2.5 |     2 |
|   3.5 |     3 |
|   4.0 |     2 |
|   4.5 |     1 |
|   5.0 |     1 |
+-------+-------+

/* ii. Beachwood

SQL code used to arrive at answer: */

select
	stars,
	count (*) as 'count'

from business

where city = 'Beachwood'

group by stars


	Copy and Paste the Result Below:
+-------+-------+
| stars | count |
+-------+-------+
|   2.0 |     1 |
|   2.5 |     1 |
|   3.0 |     2 |
|   3.5 |     2 |
|   4.0 |     1 |
|   4.5 |     2 |
|   5.0 |     5 |
+-------+-------+		


/* 7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer: */

select
	name,
	review_count

from user

order by review_count desc

limit 3
	
		
	Copy and Paste the Result Below:
+--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+		


/* 8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:

Posting more reviews DOES NOT correlate with more fans. This is tested by checking the data if there are (a significant amount of) cases where users posted many reviews but have 0 fans. This table of data can be obtained using the following SQL code: */

select
	name,
	review_count,
	fans

from user

where fans = 0

order by review_count desc


	Copy and Paste the Result Below:
+---------------+--------------+------+
| name          | review_count | fans |
+---------------+--------------+------+
| G             |          359 |    0 |
| gric          |          177 |    0 |
| Uwe           |          122 |    0 |
| Sally         |          108 |    0 |
| Marlene       |          106 |    0 |
| Jason         |          105 |    0 |
| Anand         |          104 |    0 |
| Inconspicuous |          103 |    0 |
| Ckoka         |          103 |    0 |
| Tara          |           96 |    0 |
| hotb          |           94 |    0 |
| Aileen        |           93 |    0 |
| Mama          |           93 |    0 |
| Afroza        |           91 |    0 |
| Irene         |           89 |    0 |
| William       |           85 |    0 |
| Melissa       |           85 |    0 |
| Chip          |           85 |    0 |
| Colin         |           82 |    0 |
| Dallison      |           82 |    0 |
| Alison        |           82 |    0 |
| Jeff          |           82 |    0 |
| Judith        |           81 |    0 |
| Dan           |           80 |    0 |
| Peter         |           77 |    0 |
+---------------+--------------+------+

/* In the table above we see that these users (denoted by 'name' column) posted many reviews ('review_count' column) and yet have 0 fans, indicating that posting more reviews DOES NOT correlate with more fans. */
 	
/* 9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are more reviews with the word "love'. */

	Copy and Paste the Result Below:
+------------+------------+
| hate_count | love_count |
+------------+------------+
|        232 |       1780 |
+------------+------------+

	
	/* SQL code used to arrive at answer: */

select
	sum (case when text like '%hate%' then 1 else 0 end) as hate_count,
	sum (case when text like '%love%' then 1 else 0 end) as love_count

from review
	
	
/* 10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer: */

select
	name,
	fans

from user

order by fans desc

limit 10

	
	Copy and Paste the Result Below:
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
	
		

/* Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

I chose the city 'Toronto' and the category 'Restaurants'.
	
i. Do the two groups you chose to analyze have a different distribution of hours?
Yes, the restaurants in the 4-5 star rating category generally open in the later half of the day up to early morning (with the exception of Sushi Osaka which opens 11:00 on weekdays and 14:00 on Sunday) compared to restaurants in the 2-3 rating which all open before 12 noon on all days of the week.


ii. Do the two groups you chose to analyze have a different number of reviews?
Yes, the 4-5 star rating category has a higher total review count compared to the 2-3 star rating category. The 3 restaurants in the 2-3 star rating category had a total of 86 reviews. The 3 restaurants in the 4-5 star rating category had a total of 123 reviews.
         
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
Yes. When mapping the coordinates of the 6 establishments, the restaurants with star ratings of 2-3 are located in or near Downtown Toronto. The restaurants rated 4-5 stars are a bit farther from Downtown in more "high end" parts of the City. We could infer that food may be cheaper downtown and of cheaper quality, while food in more high-end locations are pricier and of better quality, thus the difference in ratings. 

SQL code used for analysis: */

select
    b.Name,
    b.city,
    b.neighborhood,
    b.latitude,
    b.longitude,
    b.address,
    c.category,
    b.review_count,
    h.hours,

    case
    when b.stars between 2 and 3 then '2-3'
    when b.stars between 4 and 5 then '4-5'
    end as 'star rating'

from business b
    inner join category c on id=c.business_id
    inner join hours h on b.id=h.business_id

where city = 'Toronto'
    and category = 'Restaurants'
    and (b.stars between 2 and 3 or b.stars between 4 and 5)

-- include next line in query to view distinct establishments
-- group by b.name

order by b.stars asc

		
		
/* 2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: Closed businesses have a lower average star rating with 3.520 compared to the average star rating of 3.679 for open businesses.

         
         
ii. Difference 2: Open businesses have a greater average number of reviews (31.757) compared to the average number of reviews of closed businesses (23.198). */
	
  Copy and Paste the Result Below:         
+--------------+------------------+-----------------+------------------+
| OpenorClosed | Total Businesses | Ave Star Rating | Ave # of Reviews |
+--------------+------------------+-----------------+------------------+
| closed       |             1520 |            3.52 |           23.198 |
| open         |             8480 |           3.679 |           31.757 |
+--------------+------------------+-----------------+------------------+                                                                                                 
  
             
/* SQL code used for analysis: */

select
    (case when is_open is 1 then 'open' else 'closed' end) as 'OpenorClosed',
    count(name) as 'Total Businesses',
    round(avg(stars),3) as 'Ave Star Rating',
    round(avg(review_count),3) as 'Ave # of Reviews'

from business

group by openorclosed

	
	
/* 3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:

For this analysis, I want to observe how, on average, a business having parking affects the star rating the business has.
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

For this analysis, the data needed is from the 'attribute' table, specifically the 'name' and 'value' columns, and the 'stars' column from the 'business' table. The 'name' column contains specific attributes that a business may or may not have that the Yelp user chose to mention in their review. The 'value' column contains data on whether or not that business has that specific attribute. For example, a value of 1 or 'true' means that the business has this attribute while a value of 0 means it does not have this attribute. It is important to note that this analysis will limit the data selected to reviews that mention the term 'Parking' in the 'name' column of the 'attribute' table. Thus there will be businesses excluded from this analysis since it cannot be conclusively determined if they have parking or not. (If a business does not contain the term 'Parking' in the 'name' column, it cannot be immediately assumed that the business does not have parking, it just means that the Yelp user did not observe or choose to mention the attribute 'parking' in their review of the business.)

Furthermore, the analysis will observe 2 types of parking, 'BikeParking' and 'BusinessParking', and how (on average) a business having either of these types of parking affects the star rating of a business.

                           
                  
iii. Output of your finished dataset: */

+-----------------+--------------+------------------+
| Ave Star Rating | parking      | Total Businesses |
+-----------------+--------------+------------------+
|            3.44 | no parking   |               26 |
|            3.55 | with parking |               65 |
+-----------------+--------------+------------------+

/* The data shows that 91 businesses have reviews that include the term 'Parking'. Of these, 26 are cited by the reviewers to have no parking while the remaining 65 do. On average, the data shows that businesses with parking are more likely to have a higher star rating compared to businesses without parking.          
         
iv. Provide the SQL code you used to create your final dataset: */

select
    round(avg(b.stars),2) as 'Ave Star Rating',
    (case when (a.value like '%true%' or a.value = 1) then 'with parking' else 'no parking' end) as 'parking',
    count(a.name) as 'Total Businesses'
    
from business b
    inner join attribute a on b.id=a.business_id

where a.name = 'BusinessParking' or
    a.name = 'BikeParking'

group by parking
